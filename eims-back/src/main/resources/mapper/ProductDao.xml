<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eims.mybatis.dao.ProductDao">

    <resultMap type="com.eims.mybatis.entity.Product" id="ProductMap">
        <result property="productId" column="PRODUCT_ID" jdbcType="INTEGER"/>
        <result property="productNumber" column="PRODUCT_NUMBER" jdbcType="VARCHAR"/>
        <result property="productName" column="PRODUCT_NAME" jdbcType="VARCHAR"/>
        <result property="productPicture" column="PRODUCT_PICTURE" jdbcType="VARCHAR"/>
        <result property="specModel" column="SPEC_MODEL" jdbcType="VARCHAR"/>
        <result property="productUnit" column="PRODUCT_UNIT" jdbcType="VARCHAR"/>
        <result property="referCost" column="REFER_COST" jdbcType="VARCHAR"/>
        <result property="marketPrice" column="MARKET_PRICE" jdbcType="VARCHAR"/>
        <result property="commId" column="COMM_ID" jdbcType="INTEGER"/>
        <result property="minimumStock" column="MINIMUM_STOCK" jdbcType="INTEGER"/>
        <result property="isEnabled" column="IS_ENABLED" jdbcType="INTEGER"/>
        <result property="remake" column="REMAKE" jdbcType="VARCHAR"/>
        <result property="companyId" column="COMPANY_ID" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="ProductCol">
        PRODUCT_ID, PRODUCT_NUMBER, PRODUCT_NAME, PRODUCT_PICTURE, SPEC_MODEL, PRODUCT_UNIT, REFER_COST, MARKET_PRICE, COMM_ID, MINIMUM_STOCK, IS_ENABLED, REMAKE, COMPANY_ID    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="ProductMap">
        select
        <include refid="ProductCol"></include>
        from EIMS.PRODUCT
        where PRODUCT_ID = #{productId}
    </select>

    <!--查询所有-->
    <select id="queryAll" resultMap="ProductMap">
        select
        <include refid="ProductCol"></include>
        from (select <include refid="ProductCol"></include> from EIMS.PRODUCT
        <where>
            company_id = #{companyId}
        </where>)
    </select>

    <!--通过实体作为或者条件查询-->
    <select id="queryOrByPojo" resultMap="ProductMap">
        select
        <include refid="ProductCol"></include>
        from (select <include refid="ProductCol"></include> from EIMS.PRODUCT
        <where>
            company_id = #{companyId}
        </where>)

        <where>
            <if test="productId != null">
                or PRODUCT_ID like '%'||#{productId}||'%'
            </if>
            <if test="productNumber != null and productNumber != ''">
                or PRODUCT_NUMBER like '%'||#{productNumber}||'%'
            </if>
            <if test="productName != null and productName != ''">
                or PRODUCT_NAME like '%'||#{productName}||'%'
            </if>
            <if test="productPicture != null and productPicture != ''">
                or PRODUCT_PICTURE like '%'||#{productPicture}||'%'
            </if>
            <if test="specModel != null and specModel != ''">
                or SPEC_MODEL like '%'||#{specModel}||'%'
            </if>
            <if test="productUnit != null and productUnit != ''">
                or PRODUCT_UNIT like '%'||#{productUnit}||'%'
            </if>
            <if test="referCost != null">
                or REFER_COST like '%'||#{referCost}||'%'
            </if>
            <if test="marketPrice != null">
                or MARKET_PRICE like '%'||#{marketPrice}||'%'
            </if>
            <if test="commId != null">
                or COMM_ID like '%'||#{commId}||'%'
            </if>
            <if test="minimumStock != null">
                or MINIMUM_STOCK like '%'||#{minimumStock}||'%'
            </if>
            <if test="isEnabled != null">
                or IS_ENABLED like '%'||#{isEnabled}||'%'
            </if>
            <if test="remake != null and remake != ''">
                or REMAKE like '%'||#{remake}||'%'
            </if>
        </where>
    </select>

    <!--通过实体作为并且条件查询-->
    <select id="queryAndByPojo" resultMap="ProductMap">
        select
        <include refid="ProductCol"></include>
        from (select <include refid="ProductCol"></include> from EIMS.PRODUCT
        <where>
            company_id = #{companyId}
        </where>)

        <where>
            <if test="productId != null">
                and PRODUCT_ID = #{productId}
            </if>
            <if test="productNumber != null and productNumber != ''">
                and PRODUCT_NUMBER = #{productNumber}
            </if>
            <if test="productName != null and productName != ''">
                and PRODUCT_NAME = #{productName}
            </if>
            <if test="productPicture != null and productPicture != ''">
                and PRODUCT_PICTURE = #{productPicture}
            </if>
            <if test="specModel != null and specModel != ''">
                and SPEC_MODEL = #{specModel}
            </if>
            <if test="productUnit != null and productUnit != ''">
                and PRODUCT_UNIT = #{productUnit}
            </if>
            <if test="referCost != null">
                and REFER_COST = #{referCost}
            </if>
            <if test="marketPrice != null">
                and MARKET_PRICE = #{marketPrice}
            </if>
            <if test="commId != null">
                and COMM_ID = #{commId}
            </if>
            <if test="minimumStock != null">
                and MINIMUM_STOCK = #{minimumStock}
            </if>
            <if test="isEnabled != null">
                and IS_ENABLED = #{isEnabled}
            </if>
            <if test="remake != null and remake != ''">
                and REMAKE = #{remake}
            </if>
        </where>
    </select>

    <!--查询-->
    <select id="queryByAllLike" resultMap="ProductMap" >
        select
        p.PRODUCT_ID, p.PRODUCT_NUMBER, p.PRODUCT_NAME, p.PRODUCT_PICTURE,p.COMM_ID, p.SPEC_MODEL, p.PRODUCT_UNIT, p.REFER_COST, p.MARKET_PRICE, p.IS_ENABLED, p.REMAKE, P.company_Id, c.COMM_TYPE_NAME
        from EIMS.PRODUCT p
        INNER JOIN EIMS.COMMODITY_TYPE c
        on p.COMM_ID = c.COMM_ID

        <where>
            <if test='comm_type_name != null and comm_type_name != " " and comm_type_name != ""'>
                and COMM_TYPE_NAME = #{comm_type_name}
            </if>

            <if test='product_name != null and product_name != " " and product_name !=""'>
                and PRODUCT_NAME like concat(concat('%',#{product_name}),'%')
                or SPEC_MODEL like  concat(concat('%',#{product_name}),'%')
                or PRODUCT_NUMBER like  concat( concat('%',#{product_name}),'%')
            </if>
            <if test='is_enabled == "正常" '>
                and IS_ENABLED = 0

            </if>
            <if test='is_enabled == "禁用" '>
                and IS_ENABLED = 1

            </if>

        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert">
        insert into EIMS.PRODUCT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            PRODUCT_ID,
            <if test="productNumber != null">
                PRODUCT_NUMBER,
            </if>
            <if test="productName != null">
                PRODUCT_NAME,
            </if>
            <if test="productPicture != null">
                PRODUCT_PICTURE,
            </if>
            <if test="specModel != null">
                SPEC_MODEL,
            </if>
            <if test="productUnit != null">
                PRODUCT_UNIT,
            </if>
            <if test="referCost != null">
                REFER_COST,
            </if>
            <if test="marketPrice != null">
                MARKET_PRICE,
            </if>
            <if test="commId != null">
                COMM_ID,
            </if>
            <if test="minimumStock != null">
                MINIMUM_STOCK,
            </if>
            <if test="isEnabled != null">
                IS_ENABLED,
            </if>
            <if test="remake != null">
                REMAKE,
            </if>
            <if test="companyId != null">
                COMPANY_ID,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{productId},
            <if test="productNumber != null">
                #{productNumber},
            </if>
            <if test="productName != null">
                #{productName},
            </if>
            <if test="productPicture != null">
                #{productPicture},
            </if>
            <if test="specModel != null">
                #{specModel},
            </if>
            <if test="productUnit != null">
                #{productUnit},
            </if>
            <if test="referCost != null">
                #{referCost},
            </if>
            <if test="marketPrice != null">
                #{marketPrice},
            </if>
            <if test="commId != null">
                #{commId},
            </if>
            <if test="minimumStock != null">
                #{minimumStock},
            </if>
            <if test="isEnabled != null">
                #{isEnabled},
            </if>
            <if test="remake != null">
                #{remake},
            </if>
            <if test="companyId != null">
                #{companyId},
            </if>
        </trim>
        <selectKey keyProperty="productId" resultType="INTEGER" order="BEFORE">
            select SEQ_PRODUCT.nextval from dual
        </selectKey>
    </insert>

    <!--批量新增数据 -->
    <insert id="insertBatch">
        <foreach collection="list" item="entity" open="begin" separator=";" close=";end;">
            insert into EIMS.PRODUCT
            <trim prefix="(" suffix=")" suffixOverrides=",">
                PRODUCT_ID,
                <if test="entity.productNumber != null">
                    PRODUCT_NUMBER,
                </if>
                <if test="entity.productName != null">
                    PRODUCT_NAME,
                </if>
                <if test="entity.productPicture != null">
                    PRODUCT_PICTURE,
                </if>
                <if test="entity.specModel != null">
                    SPEC_MODEL,
                </if>
                <if test="entity.productUnit != null">
                    PRODUCT_UNIT,
                </if>
                <if test="entity.referCost != null">
                    REFER_COST,
                </if>
                <if test="entity.marketPrice != null">
                    MARKET_PRICE,
                </if>
                <if test="entity.commId != null">
                    COMM_ID,
                </if>
                <if test="entity.minimumStock != null">
                    MINIMUM_STOCK,
                </if>
                <if test="entity.isEnabled != null">
                    IS_ENABLED,
                </if>
                <if test="entity.remake != null">
                    REMAKE,
                </if>
                <if test="entity.companyId != null">
                    COMPANY_ID,
                </if>
            </trim>
            values
            <trim prefix="(" suffix=")" suffixOverrides=",">
                SEQ_PRODUCT.NEXTVAL,
                <if test="entity.productNumber != null">
                    #{entity.productNumber},
                </if>
                <if test="entity.productName != null">
                    #{entity.productName},
                </if>
                <if test="entity.productPicture != null">
                    #{entity.productPicture},
                </if>
                <if test="entity.specModel != null">
                    #{entity.specModel},
                </if>
                <if test="entity.productUnit != null">
                    #{entity.productUnit},
                </if>
                <if test="entity.referCost != null">
                    #{entity.referCost},
                </if>
                <if test="entity.marketPrice != null">
                    #{entity.marketPrice},
                </if>
                <if test="entity.commId != null">
                    #{entity.commId},
                </if>
                <if test="entity.minimumStock != null">
                    #{entity.minimumStock},
                </if>
                <if test="entity.isEnabled != null">
                    #{entity.isEnabled},
                </if>
                <if test="entity.remake != null">
                    #{entity.remake},
                </if>
                <if test="entity.companyId != null">
                    #{entity.companyId},
                </if>
            </trim>
        </foreach>
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update EIMS.PRODUCT
        <set>
            <if test="productNumber != null">
                PRODUCT_NUMBER = #{productNumber},
            </if>
            <if test="productName != null">
                PRODUCT_NAME = #{productName},
            </if>
            <if test="productPicture != null">
                PRODUCT_PICTURE = #{productPicture},
            </if>
            <if test="specModel != null">
                SPEC_MODEL = #{specModel},
            </if>
            <if test="productUnit != null">
                PRODUCT_UNIT = #{productUnit},
            </if>
            <if test="referCost != null">
                REFER_COST = #{referCost},
            </if>
            <if test="marketPrice != null">
                MARKET_PRICE = #{marketPrice},
            </if>
            <if test="commId != null">
                COMM_ID = #{commId},
            </if>
            <if test="minimumStock != null">
                MINIMUM_STOCK = #{minimumStock},
            </if>
            <if test="isEnabled != null">
                IS_ENABLED = #{isEnabled},
            </if>
            <if test="remake != null">
                REMAKE = #{remake},
            </if>
            <if test="companyId != null">
                COMPANY_ID = #{companyId},
            </if>
        </set>
        where PRODUCT_ID = #{productId}
    </update>

    <!--批量修改数据-->
    <update id="updateBatch">
        <foreach collection="list" item="entity" open="begin" separator=";" close=";end;">
            update EIMS.PRODUCT
            <set>
                <if test="entity.productNumber != null">
                    PRODUCT_NUMBER = #{entity.productNumber},
                </if>
                <if test="entity.productName != null">
                    PRODUCT_NAME = #{entity.productName},
                </if>
                <if test="entity.productPicture != null">
                    PRODUCT_PICTURE = #{entity.productPicture},
                </if>
                <if test="entity.specModel != null">
                    SPEC_MODEL = #{entity.specModel},
                </if>
                <if test="entity.productUnit != null">
                    PRODUCT_UNIT = #{entity.productUnit},
                </if>
                <if test="entity.referCost != null">
                    REFER_COST = #{entity.referCost},
                </if>
                <if test="entity.marketPrice != null">
                    MARKET_PRICE = #{entity.marketPrice},
                </if>
                <if test="entity.commId != null">
                    COMM_ID = #{entity.commId},
                </if>
                <if test="entity.minimumStock != null">
                    MINIMUM_STOCK = #{entity.minimumStock},
                </if>
                <if test="entity.isEnabled != null">
                    IS_ENABLED = #{entity.isEnabled},
                </if>
                <if test="entity.remake != null">
                    REMAKE = #{entity.remake},
                </if>
                <if test="entity.companyId != null">
                    COMPANY_ID = #{entity.companyId},
                </if>
            </set>
            where PRODUCT_ID = #{entity.productId}
        </foreach>
    </update>

    <!--通过主键删除数据-->
    <delete id="deleteById">
        delete from EIMS.PRODUCT where PRODUCT_ID = #{productId}
    </delete>

    <!--通过主键列表批量删除数据-->
    <delete id="deleteBatch">
        delete from EIMS.PRODUCT where PRODUCT_ID in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--通过实体列表批量删除数据-->
    <delete id="deleteBatchByEntities">
        delete from EIMS.PRODUCT where PRODUCT_ID in
        <foreach collection="list" item="entity" open="(" separator="," close=")">
            #{entity.productId}
        </foreach>
    </delete>
</mapper>

