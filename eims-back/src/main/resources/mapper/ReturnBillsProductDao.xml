<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eims.mybatis.dao.ReturnBillsProductDao">

    <resultMap type="com.eims.mybatis.entity.ReturnBillsProduct" id="ReturnBillsProductMap">
        <result property="retBpId" column="RET_BP_ID" jdbcType="INTEGER"/>
        <result property="sellReturnId" column="SELL_RETURN_ID" jdbcType="INTEGER"/>
        <result property="productId" column="PRODUCT_ID" jdbcType="INTEGER"/>
        <result property="productPicture" column="PRODUCT_PICTURE" jdbcType="VARCHAR"/>
        <result property="productName" column="PRODUCT_NAME" jdbcType="VARCHAR"/>
        <result property="productModel" column="PRODUCT_MODEL" jdbcType="VARCHAR"/>
        <result property="productUnit" column="PRODUCT_UNIT" jdbcType="VARCHAR"/>
        <result property="sellPrice" column="SELL_PRICE" jdbcType="VARCHAR"/>
        <result property="sellQuantity" column="SELL_QUANTITY" jdbcType="INTEGER"/>
        <result property="retBillPayAmount" column="RET_BILL_PAY_AMOUNT" jdbcType="VARCHAR"/>
        <result property="retBillPaidAmount" column="RET_BILL_PAID_AMOUNT" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="ReturnBillsProductCol">
        RET_BP_ID, SELL_RETURN_ID, PRODUCT_ID, PRODUCT_PICTURE, PRODUCT_NAME, PRODUCT_MODEL, PRODUCT_UNIT, SELL_PRICE, SELL_QUANTITY, RET_BILL_PAY_AMOUNT, RET_BILL_PAID_AMOUNT    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="ReturnBillsProductMap">
        select
        <include refid="ReturnBillsProductCol"></include>
        from EIMS.RETURN_BILLS_PRODUCT
        where RET_BP_ID = #{retBpId}
    </select>

    <!--查询所有-->
    <select id="queryAll" resultMap="ReturnBillsProductMap">
        select
        <include refid="ReturnBillsProductCol"></include>
        from (select <include refid="ReturnBillsProductCol"></include> from EIMS.RETURN_BILLS_PRODUCT
        <where>
        </where>)
    </select>

    <!--通过实体作为或者条件查询-->
    <select id="queryOrByPojo" resultMap="ReturnBillsProductMap">
        select
        <include refid="ReturnBillsProductCol"></include>
        from (select <include refid="ReturnBillsProductCol"></include> from EIMS.RETURN_BILLS_PRODUCT
        <where>
        </where>)

        <where>
            <if test="retBpId != null">
                or RET_BP_ID like '%'||#{retBpId}||'%'
            </if>
            <if test="sellReturnId != null">
                or SELL_RETURN_ID like '%'||#{sellReturnId}||'%'
            </if>
            <if test="productId != null">
                or PRODUCT_ID like '%'||#{productId}||'%'
            </if>
            <if test="productPicture != null and productPicture != ''">
                or PRODUCT_PICTURE like '%'||#{productPicture}||'%'
            </if>
            <if test="productName != null and productName != ''">
                or PRODUCT_NAME like '%'||#{productName}||'%'
            </if>
            <if test="productModel != null and productModel != ''">
                or PRODUCT_MODEL like '%'||#{productModel}||'%'
            </if>
            <if test="productUnit != null and productUnit != ''">
                or PRODUCT_UNIT like '%'||#{productUnit}||'%'
            </if>
            <if test="sellPrice != null">
                or SELL_PRICE like '%'||#{sellPrice}||'%'
            </if>
            <if test="sellQuantity != null">
                or SELL_QUANTITY like '%'||#{sellQuantity}||'%'
            </if>
            <if test="retBillPayAmount != null">
                or RET_BILL_PAY_AMOUNT like '%'||#{retBillPayAmount}||'%'
            </if>
            <if test="retBillPaidAmount != null">
                or RET_BILL_PAID_AMOUNT like '%'||#{retBillPaidAmount}||'%'
            </if>
        </where>
    </select>

    <!--通过实体作为并且条件查询-->
    <select id="queryAndByPojo" resultMap="ReturnBillsProductMap">
        select
        <include refid="ReturnBillsProductCol"></include>
        from (select <include refid="ReturnBillsProductCol"></include> from EIMS.RETURN_BILLS_PRODUCT
        <where>
        </where>)

        <where>
            <if test="retBpId != null">
                and RET_BP_ID = #{retBpId}
            </if>
            <if test="sellReturnId != null">
                and SELL_RETURN_ID = #{sellReturnId}
            </if>
            <if test="productId != null">
                and PRODUCT_ID = #{productId}
            </if>
            <if test="productPicture != null and productPicture != ''">
                and PRODUCT_PICTURE = #{productPicture}
            </if>
            <if test="productName != null and productName != ''">
                and PRODUCT_NAME = #{productName}
            </if>
            <if test="productModel != null and productModel != ''">
                and PRODUCT_MODEL = #{productModel}
            </if>
            <if test="productUnit != null and productUnit != ''">
                and PRODUCT_UNIT = #{productUnit}
            </if>
            <if test="sellPrice != null">
                and SELL_PRICE = #{sellPrice}
            </if>
            <if test="sellQuantity != null">
                and SELL_QUANTITY = #{sellQuantity}
            </if>
            <if test="retBillPayAmount != null">
                and RET_BILL_PAY_AMOUNT = #{retBillPayAmount}
            </if>
            <if test="retBillPaidAmount != null">
                and RET_BILL_PAID_AMOUNT = #{retBillPaidAmount}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert">
        insert into EIMS.RETURN_BILLS_PRODUCT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            RET_BP_ID,
            <if test="sellReturnId != null">
                SELL_RETURN_ID,
            </if>
            <if test="productId != null">
                PRODUCT_ID,
            </if>
            <if test="productPicture != null">
                PRODUCT_PICTURE,
            </if>
            <if test="productName != null">
                PRODUCT_NAME,
            </if>
            <if test="productModel != null">
                PRODUCT_MODEL,
            </if>
            <if test="productUnit != null">
                PRODUCT_UNIT,
            </if>
            <if test="sellPrice != null">
                SELL_PRICE,
            </if>
            <if test="sellQuantity != null">
                SELL_QUANTITY,
            </if>
            <if test="retBillPayAmount != null">
                RET_BILL_PAY_AMOUNT,
            </if>
            <if test="retBillPaidAmount != null">
                RET_BILL_PAID_AMOUNT,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{retBpId},
            <if test="sellReturnId != null">
                #{sellReturnId},
            </if>
            <if test="productId != null">
                #{productId},
            </if>
            <if test="productPicture != null">
                #{productPicture},
            </if>
            <if test="productName != null">
                #{productName},
            </if>
            <if test="productModel != null">
                #{productModel},
            </if>
            <if test="productUnit != null">
                #{productUnit},
            </if>
            <if test="sellPrice != null">
                #{sellPrice},
            </if>
            <if test="sellQuantity != null">
                #{sellQuantity},
            </if>
            <if test="retBillPayAmount != null">
                #{retBillPayAmount},
            </if>
            <if test="retBillPaidAmount != null">
                #{retBillPaidAmount},
            </if>
        </trim>
        <selectKey keyProperty="retBpId" resultType="INTEGER" order="BEFORE">
            select SEQ_RETURN_BILLS_PRODUCT.nextval from dual
        </selectKey>
    </insert>

    <!--批量新增数据 -->
    <insert id="insertBatch">
        <foreach collection="list" item="entity" open="begin" separator=";" close=";end;">
            insert into EIMS.RETURN_BILLS_PRODUCT
            <trim prefix="(" suffix=")" suffixOverrides=",">
                RET_BP_ID,
                <if test="entity.sellReturnId != null">
                    SELL_RETURN_ID,
                </if>
                <if test="entity.productId != null">
                    PRODUCT_ID,
                </if>
                <if test="entity.productPicture != null">
                    PRODUCT_PICTURE,
                </if>
                <if test="entity.productName != null">
                    PRODUCT_NAME,
                </if>
                <if test="entity.productModel != null">
                    PRODUCT_MODEL,
                </if>
                <if test="entity.productUnit != null">
                    PRODUCT_UNIT,
                </if>
                <if test="entity.sellPrice != null">
                    SELL_PRICE,
                </if>
                <if test="entity.sellQuantity != null">
                    SELL_QUANTITY,
                </if>
                <if test="entity.retBillPayAmount != null">
                    RET_BILL_PAY_AMOUNT,
                </if>
                <if test="entity.retBillPaidAmount != null">
                    RET_BILL_PAID_AMOUNT,
                </if>
            </trim>
            values
            <trim prefix="(" suffix=")" suffixOverrides=",">
                SEQ_RETURN_BILLS_PRODUCT.NEXTVAL,
                <if test="entity.sellReturnId != null">
                    #{entity.sellReturnId},
                </if>
                <if test="entity.productId != null">
                    #{entity.productId},
                </if>
                <if test="entity.productPicture != null">
                    #{entity.productPicture},
                </if>
                <if test="entity.productName != null">
                    #{entity.productName},
                </if>
                <if test="entity.productModel != null">
                    #{entity.productModel},
                </if>
                <if test="entity.productUnit != null">
                    #{entity.productUnit},
                </if>
                <if test="entity.sellPrice != null">
                    #{entity.sellPrice},
                </if>
                <if test="entity.sellQuantity != null">
                    #{entity.sellQuantity},
                </if>
                <if test="entity.retBillPayAmount != null">
                    #{entity.retBillPayAmount},
                </if>
                <if test="entity.retBillPaidAmount != null">
                    #{entity.retBillPaidAmount},
                </if>
            </trim>
        </foreach>
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update EIMS.RETURN_BILLS_PRODUCT
        <set>
            <if test="sellReturnId != null">
                SELL_RETURN_ID = #{sellReturnId},
            </if>
            <if test="productId != null">
                PRODUCT_ID = #{productId},
            </if>
            <if test="productPicture != null">
                PRODUCT_PICTURE = #{productPicture},
            </if>
            <if test="productName != null">
                PRODUCT_NAME = #{productName},
            </if>
            <if test="productModel != null">
                PRODUCT_MODEL = #{productModel},
            </if>
            <if test="productUnit != null">
                PRODUCT_UNIT = #{productUnit},
            </if>
            <if test="sellPrice != null">
                SELL_PRICE = #{sellPrice},
            </if>
            <if test="sellQuantity != null">
                SELL_QUANTITY = #{sellQuantity},
            </if>
            <if test="retBillPayAmount != null">
                RET_BILL_PAY_AMOUNT = #{retBillPayAmount},
            </if>
            <if test="retBillPaidAmount != null">
                RET_BILL_PAID_AMOUNT = #{retBillPaidAmount},
            </if>
        </set>
        where RET_BP_ID = #{retBpId}
    </update>

    <!--批量修改数据-->
    <update id="updateBatch">
        <foreach collection="list" item="entity" open="begin" separator=";" close=";end;">
            update EIMS.RETURN_BILLS_PRODUCT
            <set>
                <if test="entity.sellReturnId != null">
                    SELL_RETURN_ID = #{entity.sellReturnId},
                </if>
                <if test="entity.productId != null">
                    PRODUCT_ID = #{entity.productId},
                </if>
                <if test="entity.productPicture != null">
                    PRODUCT_PICTURE = #{entity.productPicture},
                </if>
                <if test="entity.productName != null">
                    PRODUCT_NAME = #{entity.productName},
                </if>
                <if test="entity.productModel != null">
                    PRODUCT_MODEL = #{entity.productModel},
                </if>
                <if test="entity.productUnit != null">
                    PRODUCT_UNIT = #{entity.productUnit},
                </if>
                <if test="entity.sellPrice != null">
                    SELL_PRICE = #{entity.sellPrice},
                </if>
                <if test="entity.sellQuantity != null">
                    SELL_QUANTITY = #{entity.sellQuantity},
                </if>
                <if test="entity.retBillPayAmount != null">
                    RET_BILL_PAY_AMOUNT = #{entity.retBillPayAmount},
                </if>
                <if test="entity.retBillPaidAmount != null">
                    RET_BILL_PAID_AMOUNT = #{entity.retBillPaidAmount},
                </if>
            </set>
            where RET_BP_ID = #{entity.retBpId}
        </foreach>
    </update>

    <!--通过主键删除数据-->
    <delete id="deleteById">
        delete from EIMS.RETURN_BILLS_PRODUCT where RET_BP_ID = #{retBpId}
    </delete>

    <!--通过主键列表批量删除数据-->
    <delete id="deleteBatch">
        delete from EIMS.RETURN_BILLS_PRODUCT where RET_BP_ID in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--通过实体列表批量删除数据-->
    <delete id="deleteBatchByEntities">
        delete from EIMS.RETURN_BILLS_PRODUCT where RET_BP_ID in
        <foreach collection="list" item="entity" open="(" separator="," close=")">
            #{entity.retBpId}
        </foreach>
    </delete>


</mapper>

